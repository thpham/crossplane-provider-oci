/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CaptureFilterObservation struct {

	// The capture filter's Oracle ID (OCID).
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The capture filter's current administrative state.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The date and time the capture filter was created, in the format defined by RFC3339.  Example: 2021-08-25T21:10:29.600Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`
}

type CaptureFilterParameters struct {

	// (Updatable) The OCID of the compartment containing the capture filter.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Indicates which service will use this capture filter
	// +kubebuilder:validation:Required
	FilterType *string `json:"filterType" tf:"filter_type,omitempty"`

	// (Updatable) The set of rules governing what traffic the Flow Log collects when creating a flow log capture filter.
	// +kubebuilder:validation:Optional
	FlowLogCaptureFilterRules []FlowLogCaptureFilterRulesParameters `json:"flowLogCaptureFilterRules,omitempty" tf:"flow_log_capture_filter_rules,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) The set of rules governing what traffic a VTAP mirrors.
	// +kubebuilder:validation:Optional
	VtapCaptureFilterRules []VtapCaptureFilterRulesParameters `json:"vtapCaptureFilterRules,omitempty" tf:"vtap_capture_filter_rules,omitempty"`
}

type DestinationPortRangeObservation struct {
}

type DestinationPortRangeParameters struct {

	// (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
	// +kubebuilder:validation:Required
	Max *float64 `json:"max" tf:"max,omitempty"`

	// (Updatable) The minimum port number, which must not be greater than the maximum port number.
	// +kubebuilder:validation:Required
	Min *float64 `json:"min" tf:"min,omitempty"`
}

type FlowLogCaptureFilterRulesObservation struct {
}

type FlowLogCaptureFilterRulesParameters struct {

	// (Updatable) Traffic to this CIDR will be captured in the flow log.
	// +kubebuilder:validation:Optional
	DestinationCidr *string `json:"destinationCidr,omitempty" tf:"destination_cidr,omitempty"`

	// (Updatable) Type or types of flow logs to store. ALL includes records for both accepted traffic and rejected traffic.
	// +kubebuilder:validation:Optional
	FlowLogType *string `json:"flowLogType,omitempty" tf:"flow_log_type,omitempty"`

	// (Updatable) Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
	// +kubebuilder:validation:Optional
	IcmpOptions []IcmpOptionsParameters `json:"icmpOptions,omitempty" tf:"icmp_options,omitempty"`

	// (Updatable) Indicates whether a flow log capture filter rule is enabled.
	// +kubebuilder:validation:Optional
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled,omitempty"`

	// (Updatable) A lower number indicates a higher priority, range 0-9. Each rule must have a distinct priority.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Updatable) The transport protocol the filter uses.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// (Updatable) Include or exclude a ruleAction object.
	// +kubebuilder:validation:Optional
	RuleAction *string `json:"ruleAction,omitempty" tf:"rule_action,omitempty"`

	// (Updatable) Sampling interval as 1 of X, where X is an integer not greater than 100000.
	// +kubebuilder:validation:Optional
	SamplingRate *float64 `json:"samplingRate,omitempty" tf:"sampling_rate,omitempty"`

	// (Updatable) Traffic from this CIDR will be captured in the flow log.
	// +kubebuilder:validation:Optional
	SourceCidr *string `json:"sourceCidr,omitempty" tf:"source_cidr,omitempty"`

	// (Updatable) Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
	// +kubebuilder:validation:Optional
	TCPOptions []TCPOptionsParameters `json:"tcpOptions,omitempty" tf:"tcp_options,omitempty"`

	// (Updatable) Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
	// +kubebuilder:validation:Optional
	UDPOptions []UDPOptionsParameters `json:"udpOptions,omitempty" tf:"udp_options,omitempty"`
}

type IcmpOptionsObservation struct {
}

type IcmpOptionsParameters struct {

	// (Updatable) The ICMP code .
	// +kubebuilder:validation:Optional
	Code *float64 `json:"code,omitempty" tf:"code,omitempty"`

	// (Updatable) The ICMP type.
	// +kubebuilder:validation:Required
	Type *float64 `json:"type" tf:"type,omitempty"`
}

type SourcePortRangeObservation struct {
}

type SourcePortRangeParameters struct {

	// (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
	// +kubebuilder:validation:Required
	Max *float64 `json:"max" tf:"max,omitempty"`

	// (Updatable) The minimum port number, which must not be greater than the maximum port number.
	// +kubebuilder:validation:Required
	Min *float64 `json:"min" tf:"min,omitempty"`
}

type TCPOptionsDestinationPortRangeObservation struct {
}

type TCPOptionsDestinationPortRangeParameters struct {

	// (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
	// +kubebuilder:validation:Required
	Max *float64 `json:"max" tf:"max,omitempty"`

	// (Updatable) The minimum port number, which must not be greater than the maximum port number.
	// +kubebuilder:validation:Required
	Min *float64 `json:"min" tf:"min,omitempty"`
}

type TCPOptionsObservation struct {
}

type TCPOptionsParameters struct {

	// (Updatable)
	// +kubebuilder:validation:Optional
	DestinationPortRange []DestinationPortRangeParameters `json:"destinationPortRange,omitempty" tf:"destination_port_range,omitempty"`

	// (Updatable)
	// +kubebuilder:validation:Optional
	SourcePortRange []SourcePortRangeParameters `json:"sourcePortRange,omitempty" tf:"source_port_range,omitempty"`
}

type TCPOptionsSourcePortRangeObservation struct {
}

type TCPOptionsSourcePortRangeParameters struct {

	// (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
	// +kubebuilder:validation:Required
	Max *float64 `json:"max" tf:"max,omitempty"`

	// (Updatable) The minimum port number, which must not be greater than the maximum port number.
	// +kubebuilder:validation:Required
	Min *float64 `json:"min" tf:"min,omitempty"`
}

type UDPOptionsDestinationPortRangeObservation struct {
}

type UDPOptionsDestinationPortRangeParameters struct {

	// (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
	// +kubebuilder:validation:Required
	Max *float64 `json:"max" tf:"max,omitempty"`

	// (Updatable) The minimum port number, which must not be greater than the maximum port number.
	// +kubebuilder:validation:Required
	Min *float64 `json:"min" tf:"min,omitempty"`
}

type UDPOptionsObservation struct {
}

type UDPOptionsParameters struct {

	// (Updatable)
	// +kubebuilder:validation:Optional
	DestinationPortRange []UDPOptionsDestinationPortRangeParameters `json:"destinationPortRange,omitempty" tf:"destination_port_range,omitempty"`

	// (Updatable)
	// +kubebuilder:validation:Optional
	SourcePortRange []UDPOptionsSourcePortRangeParameters `json:"sourcePortRange,omitempty" tf:"source_port_range,omitempty"`
}

type UDPOptionsSourcePortRangeObservation struct {
}

type UDPOptionsSourcePortRangeParameters struct {

	// (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
	// +kubebuilder:validation:Required
	Max *float64 `json:"max" tf:"max,omitempty"`

	// (Updatable) The minimum port number, which must not be greater than the maximum port number.
	// +kubebuilder:validation:Required
	Min *float64 `json:"min" tf:"min,omitempty"`
}

type VtapCaptureFilterRulesIcmpOptionsObservation struct {
}

type VtapCaptureFilterRulesIcmpOptionsParameters struct {

	// (Updatable) The ICMP code .
	// +kubebuilder:validation:Optional
	Code *float64 `json:"code,omitempty" tf:"code,omitempty"`

	// (Updatable) The ICMP type.
	// +kubebuilder:validation:Required
	Type *float64 `json:"type" tf:"type,omitempty"`
}

type VtapCaptureFilterRulesObservation struct {
}

type VtapCaptureFilterRulesParameters struct {

	// (Updatable) Traffic to this CIDR will be captured in the flow log.
	// +kubebuilder:validation:Optional
	DestinationCidr *string `json:"destinationCidr,omitempty" tf:"destination_cidr,omitempty"`

	// (Updatable) Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:
	// +kubebuilder:validation:Optional
	IcmpOptions []VtapCaptureFilterRulesIcmpOptionsParameters `json:"icmpOptions,omitempty" tf:"icmp_options,omitempty"`

	// (Updatable) The transport protocol the filter uses.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// (Updatable) Include or exclude a ruleAction object.
	// +kubebuilder:validation:Optional
	RuleAction *string `json:"ruleAction,omitempty" tf:"rule_action,omitempty"`

	// (Updatable) Traffic from this CIDR will be captured in the flow log.
	// +kubebuilder:validation:Optional
	SourceCidr *string `json:"sourceCidr,omitempty" tf:"source_cidr,omitempty"`

	// (Updatable) Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
	// +kubebuilder:validation:Optional
	TCPOptions []VtapCaptureFilterRulesTCPOptionsParameters `json:"tcpOptions,omitempty" tf:"tcp_options,omitempty"`

	// (Updatable) The traffic direction the VTAP is configured to mirror.
	// +kubebuilder:validation:Required
	TrafficDirection *string `json:"trafficDirection" tf:"traffic_direction,omitempty"`

	// (Updatable) Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
	// +kubebuilder:validation:Optional
	UDPOptions []VtapCaptureFilterRulesUDPOptionsParameters `json:"udpOptions,omitempty" tf:"udp_options,omitempty"`
}

type VtapCaptureFilterRulesTCPOptionsObservation struct {
}

type VtapCaptureFilterRulesTCPOptionsParameters struct {

	// (Updatable)
	// +kubebuilder:validation:Optional
	DestinationPortRange []TCPOptionsDestinationPortRangeParameters `json:"destinationPortRange,omitempty" tf:"destination_port_range,omitempty"`

	// (Updatable)
	// +kubebuilder:validation:Optional
	SourcePortRange []TCPOptionsSourcePortRangeParameters `json:"sourcePortRange,omitempty" tf:"source_port_range,omitempty"`
}

type VtapCaptureFilterRulesUDPOptionsDestinationPortRangeObservation struct {
}

type VtapCaptureFilterRulesUDPOptionsDestinationPortRangeParameters struct {

	// (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
	// +kubebuilder:validation:Required
	Max *float64 `json:"max" tf:"max,omitempty"`

	// (Updatable) The minimum port number, which must not be greater than the maximum port number.
	// +kubebuilder:validation:Required
	Min *float64 `json:"min" tf:"min,omitempty"`
}

type VtapCaptureFilterRulesUDPOptionsObservation struct {
}

type VtapCaptureFilterRulesUDPOptionsParameters struct {

	// (Updatable)
	// +kubebuilder:validation:Optional
	DestinationPortRange []VtapCaptureFilterRulesUDPOptionsDestinationPortRangeParameters `json:"destinationPortRange,omitempty" tf:"destination_port_range,omitempty"`

	// (Updatable)
	// +kubebuilder:validation:Optional
	SourcePortRange []VtapCaptureFilterRulesUDPOptionsSourcePortRangeParameters `json:"sourcePortRange,omitempty" tf:"source_port_range,omitempty"`
}

type VtapCaptureFilterRulesUDPOptionsSourcePortRangeObservation struct {
}

type VtapCaptureFilterRulesUDPOptionsSourcePortRangeParameters struct {

	// (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
	// +kubebuilder:validation:Required
	Max *float64 `json:"max" tf:"max,omitempty"`

	// (Updatable) The minimum port number, which must not be greater than the maximum port number.
	// +kubebuilder:validation:Required
	Min *float64 `json:"min" tf:"min,omitempty"`
}

// CaptureFilterSpec defines the desired state of CaptureFilter
type CaptureFilterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CaptureFilterParameters `json:"forProvider"`
}

// CaptureFilterStatus defines the observed state of CaptureFilter.
type CaptureFilterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CaptureFilterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// CaptureFilter is the Schema for the CaptureFilters API. Provides the Capture Filter resource in Oracle Cloud Infrastructure Core service
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type CaptureFilter struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CaptureFilterSpec   `json:"spec"`
	Status            CaptureFilterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CaptureFilterList contains a list of CaptureFilters
type CaptureFilterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CaptureFilter `json:"items"`
}

// Repository type metadata.
var (
	CaptureFilter_Kind             = "CaptureFilter"
	CaptureFilter_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CaptureFilter_Kind}.String()
	CaptureFilter_KindAPIVersion   = CaptureFilter_Kind + "." + CRDGroupVersion.String()
	CaptureFilter_GroupVersionKind = CRDGroupVersion.WithKind(CaptureFilter_Kind)
)

func init() {
	SchemeBuilder.Register(&CaptureFilter{}, &CaptureFilterList{})
}
