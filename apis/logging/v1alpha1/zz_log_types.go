/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ConfigurationObservation struct {
}

type ConfigurationParameters struct {

	// The OCID of the compartment that the resource belongs to.
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// The source the log object comes from.
	// +kubebuilder:validation:Required
	Source []SourceParameters `json:"source" tf:"source,omitempty"`
}

type LogObservation struct {

	// The OCID of the compartment that the resource belongs to.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// The OCID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The pipeline state.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The OCID of the tenancy.
	TenancyID *string `json:"tenancyId,omitempty" tf:"tenancy_id,omitempty"`

	// Time the resource was created.
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// Time the resource was last modified.
	TimeLastModified *string `json:"timeLastModified,omitempty" tf:"time_last_modified,omitempty"`
}

type LogParameters struct {

	// Log object configuration.
	// +kubebuilder:validation:Optional
	Configuration []ConfigurationParameters `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Required
	DisplayName *string `json:"displayName" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags. Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) Whether or not this resource is currently enabled.
	// +kubebuilder:validation:Optional
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled,omitempty"`

	// (Updatable) OCID of a log group to work with.
	// +crossplane:generate:reference:type=LogGroup
	// +kubebuilder:validation:Optional
	LogGroupID *string `json:"logGroupId,omitempty" tf:"log_group_id,omitempty"`

	// Reference to a LogGroup to populate logGroupId.
	// +kubebuilder:validation:Optional
	LogGroupIDRef *v1.Reference `json:"logGroupIdRef,omitempty" tf:"-"`

	// Selector for a LogGroup to populate logGroupId.
	// +kubebuilder:validation:Optional
	LogGroupIDSelector *v1.Selector `json:"logGroupIdSelector,omitempty" tf:"-"`

	// The logType that the log object is for, whether custom or service.
	// +kubebuilder:validation:Required
	LogType *string `json:"logType" tf:"log_type,omitempty"`

	// (Updatable) Log retention duration in 30-day increments (30, 60, 90 and so on until 180).
	// +kubebuilder:validation:Optional
	RetentionDuration *float64 `json:"retentionDuration,omitempty" tf:"retention_duration,omitempty"`
}

type SourceObservation struct {
}

type SourceParameters struct {

	// Log object category.
	// +kubebuilder:validation:Required
	Category *string `json:"category" tf:"category,omitempty"`

	// The unique identifier of the resource emitting the log.
	// +kubebuilder:validation:Required
	Resource *string `json:"resource" tf:"resource,omitempty"`

	// Service generating log.
	// +kubebuilder:validation:Required
	Service *string `json:"service" tf:"service,omitempty"`

	// The log source.
	// +kubebuilder:validation:Required
	SourceType *string `json:"sourceType" tf:"source_type,omitempty"`
}

// LogSpec defines the desired state of Log
type LogSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LogParameters `json:"forProvider"`
}

// LogStatus defines the observed state of Log.
type LogStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LogObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Log is the Schema for the Logs API. Provides the Log resource in Oracle Cloud Infrastructure Logging service
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type Log struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LogSpec   `json:"spec"`
	Status            LogStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LogList contains a list of Logs
type LogList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Log `json:"items"`
}

// Repository type metadata.
var (
	Log_Kind             = "Log"
	Log_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Log_Kind}.String()
	Log_KindAPIVersion   = Log_Kind + "." + CRDGroupVersion.String()
	Log_GroupVersionKind = CRDGroupVersion.WithKind(Log_Kind)
)

func init() {
	SchemeBuilder.Register(&Log{}, &LogList{})
}
