/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FirewallNetworkFirewallObservation struct {

	// The OCID of the Network Firewall resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in 'FAILED' state.
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details,omitempty"`

	// The current state of the Network Firewall.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: {"orcl-cloud.free-tier-retained": "true"}
	SystemTags map[string]*string `json:"systemTags,omitempty" tf:"system_tags,omitempty"`

	// The time at which the Network Firewall was created in the format defined by RFC3339. Example: 2016-08-25T21:10:29.600Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// The time at which the Network Firewall was updated in the format defined by RFC3339. Example: 2016-08-25T21:10:29.600Z
	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated,omitempty"`
}

type FirewallNetworkFirewallParameters struct {

	// Availability Domain where Network Firewall instance is created. To get a list of availability domains for a tenancy, use ListAvailabilityDomains operation. Example: kIdk:PHX-AD-1
	// +kubebuilder:validation:Optional
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// (Updatable) The OCID of the compartment containing the Network Firewall.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name for the Network Firewall. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags. Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// IPv4 address for the Network Firewall.
	// +kubebuilder:validation:Optional
	Ipv4Address *string `json:"ipv4address,omitempty" tf:"ipv4address,omitempty"`

	// IPv6 address for the Network Firewall.
	// +kubebuilder:validation:Optional
	Ipv6Address *string `json:"ipv6address,omitempty" tf:"ipv6address,omitempty"`

	// (Updatable) The OCID of the Network Firewall Policy.
	// +crossplane:generate:reference:type=FirewallNetworkFirewallPolicy
	// +kubebuilder:validation:Optional
	NetworkFirewallPolicyID *string `json:"networkFirewallPolicyId,omitempty" tf:"network_firewall_policy_id,omitempty"`

	// Reference to a FirewallNetworkFirewallPolicy to populate networkFirewallPolicyId.
	// +kubebuilder:validation:Optional
	NetworkFirewallPolicyIDRef *v1.Reference `json:"networkFirewallPolicyIdRef,omitempty" tf:"-"`

	// Selector for a FirewallNetworkFirewallPolicy to populate networkFirewallPolicyId.
	// +kubebuilder:validation:Optional
	NetworkFirewallPolicyIDSelector *v1.Selector `json:"networkFirewallPolicyIdSelector,omitempty" tf:"-"`

	// (Updatable) An array of network security groups OCID associated with the Network Firewall.
	// +kubebuilder:validation:Optional
	NetworkSecurityGroupIds []*string `json:"networkSecurityGroupIds,omitempty" tf:"network_security_group_ids,omitempty"`

	// The OCID of the subnet associated with the Network Firewall.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/core/v1alpha1.Subnet
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in core to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in core to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`
}

// FirewallNetworkFirewallSpec defines the desired state of FirewallNetworkFirewall
type FirewallNetworkFirewallSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FirewallNetworkFirewallParameters `json:"forProvider"`
}

// FirewallNetworkFirewallStatus defines the observed state of FirewallNetworkFirewall.
type FirewallNetworkFirewallStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FirewallNetworkFirewallObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// FirewallNetworkFirewall is the Schema for the FirewallNetworkFirewalls API. Provides the Network Firewall resource in Oracle Cloud Infrastructure Network Firewall service
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type FirewallNetworkFirewall struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FirewallNetworkFirewallSpec   `json:"spec"`
	Status            FirewallNetworkFirewallStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FirewallNetworkFirewallList contains a list of FirewallNetworkFirewalls
type FirewallNetworkFirewallList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FirewallNetworkFirewall `json:"items"`
}

// Repository type metadata.
var (
	FirewallNetworkFirewall_Kind             = "FirewallNetworkFirewall"
	FirewallNetworkFirewall_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FirewallNetworkFirewall_Kind}.String()
	FirewallNetworkFirewall_KindAPIVersion   = FirewallNetworkFirewall_Kind + "." + CRDGroupVersion.String()
	FirewallNetworkFirewall_GroupVersionKind = CRDGroupVersion.WithKind(FirewallNetworkFirewall_Kind)
)

func init() {
	SchemeBuilder.Register(&FirewallNetworkFirewall{}, &FirewallNetworkFirewallList{})
}
