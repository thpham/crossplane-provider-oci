---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: keys.kms.oci.upbound.io
spec:
  group: kms.oci.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - oci
    kind: Key
    listKind: KeyList
    plural: keys
    singular: key
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Key is the Schema for the Keys API. Provides the Key resource
          in Oracle Cloud Infrastructure Kms service
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeySpec defines the desired state of Key
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  compartmentId:
                    description: (Updatable) The OCID of the compartment where you
                      want to create the master encryption key.
                    type: string
                  compartmentIdRef:
                    description: Reference to a Compartment in identity to populate
                      compartmentId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  compartmentIdSelector:
                    description: Selector for a Compartment in identity to populate
                      compartmentId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags. Example: {"Operations.CostCenter": "42"}'
                    type: object
                  desiredState:
                    description: '(Updatable) Desired state of the key. Possible values
                      : ENABLED or DISABLED'
                    type: string
                  displayName:
                    description: (Updatable) A user-friendly name for the key. It
                      does not have to be unique, and it is changeable. Avoid entering
                      confidential information.
                    type: string
                  externalKeyReference:
                    description: A reference to the key on external key manager.
                    items:
                      properties:
                        externalKeyId:
                          description: ExternalKeyId refers to the globally unique
                            key Id associated with the key created in external vault
                            in CTM
                          type: string
                      required:
                      - externalKeyId
                      type: object
                    type: array
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags. Example:
                      {"Department": "Finance"}'
                    type: object
                  keyShape:
                    description: The cryptographic properties of a key.
                    items:
                      properties:
                        algorithm:
                          description: The algorithm used by a key's key versions
                            to encrypt or decrypt. Only AES algorithm is supported
                            for External keys.
                          type: string
                        curveId:
                          description: Supported curve IDs for ECDSA keys.
                          type: string
                        length:
                          description: 'The length of the key in bytes, expressed
                            as an integer. Supported values include the following:'
                          type: number
                      required:
                      - algorithm
                      - length
                      type: object
                    type: array
                  managementEndpoint:
                    description: The service endpoint to perform management operations
                      against. Management operations include 'Create,' 'Update,' 'List,'
                      'Get,' and 'Delete' operations. See Vault Management endpoint.
                    type: string
                  protectionMode:
                    description: The key's protection mode indicates how the key persists
                      and where cryptographic operations that use the key are performed.
                      A protection mode of HSM means that the key persists on a hardware
                      security module (HSM) and all cryptographic operations are performed
                      inside the HSM. A protection mode of SOFTWARE means that the
                      key persists on the server, protected by the vault's RSA wrapping
                      key which persists on the HSM. All cryptographic operations
                      that use a key with a protection mode of SOFTWARE are performed
                      on the server. By default, a key's protection mode is set to
                      HSM. You can't change a key's protection mode after the key
                      is created or imported. A protection mode of EXTERNAL mean that
                      the key persists on the customer's external key manager which
                      is hosted externally outside of oracle. Oracle only hold a reference
                      to that key. All cryptographic operations that use a key with
                      a protection mode of EXTERNAL are performed by external key
                      manager.
                    type: string
                  restoreFromFile:
                    description: (Updatable) Details where key was backed up.
                    items:
                      properties:
                        contentLength:
                          description: (Updatable) content length of key's backup
                            binary file
                          type: string
                        contentMd5:
                          description: (Updatable) content md5 hashed value of key's
                            backup file
                          type: string
                        restoreKeyFromFileDetails:
                          description: Key backup file content.
                          type: string
                      required:
                      - contentLength
                      - restoreKeyFromFileDetails
                      type: object
                    type: array
                  restoreFromObjectStore:
                    description: (Updatable) Details where key was backed up
                    items:
                      properties:
                        bucket:
                          description: (Updatable) Name of the bucket where key was
                            backed up
                          type: string
                        destination:
                          description: (Updatable) Type of backup to restore from.
                            Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are
                            supported
                          type: string
                        namespace:
                          description: (Updatable) Namespace of the bucket where key
                            was backed up
                          type: string
                        object:
                          description: (Updatable) Object containing the backup
                          type: string
                        uri:
                          description: (Updatable) Pre-authenticated-request-uri of
                            the backup
                          type: string
                      required:
                      - destination
                      type: object
                    type: array
                  restoreTrigger:
                    description: (Updatable) An optional property when flipped triggers
                      restore from restore option provided in config file.
                    type: boolean
                  timeOfDeletion:
                    description: '(Updatable) An optional property for the deletion
                      time of the key, expressed in RFC 3339 timestamp format. Example:
                      2019-04-03T21:10:29.600Z'
                    type: string
                required:
                - displayName
                - keyShape
                - managementEndpoint
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: KeyStatus defines the observed state of Key.
            properties:
              atProvider:
                properties:
                  currentKeyVersion:
                    description: The OCID of the key version used in cryptographic
                      operations. During key rotation, the service might be in a transitional
                      state where this or a newer key version are used intermittently.
                      The currentKeyVersion property is updated when the service is
                      guaranteed to use the new key version for all subsequent encryption
                      operations.
                    type: string
                  externalKeyReferenceDetails:
                    description: Key reference data to be returned to the customer
                      as a response.
                    items:
                      properties:
                        externalKeyId:
                          description: ExternalKeyId refers to the globally unique
                            key Id associated with the key created in external vault
                            in CTM
                          type: string
                        externalKeyVersionId:
                          description: Key version ID associated with the external
                            key.
                          type: string
                      type: object
                    type: array
                  id:
                    description: The OCID of the key.
                    type: string
                  isPrimary:
                    description: A Boolean value that indicates whether the Key belongs
                      to primary Vault or replica vault.
                    type: boolean
                  replicaDetails:
                    description: Key replica details
                    items:
                      properties:
                        replicationId:
                          description: ReplicationId associated with a key operation
                          type: string
                      type: object
                    type: array
                  restoredFromKeyId:
                    description: The OCID of the key from which this key was restored.
                    type: string
                  state:
                    description: 'The key''s current lifecycle state.  Example: ENABLED'
                    type: string
                  timeCreated:
                    description: 'The date and time the key was created, expressed
                      in RFC 3339 timestamp format.  Example: 2018-04-03T21:10:29.600Z'
                    type: string
                  vaultId:
                    description: The OCID of the vault that contains this key.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
