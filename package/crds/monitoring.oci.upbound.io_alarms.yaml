---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: alarms.monitoring.oci.upbound.io
spec:
  group: monitoring.oci.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - oci
    kind: Alarm
    listKind: AlarmList
    plural: alarms
    singular: alarm
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Alarm is the Schema for the Alarms API. Provides the Alarm resource
          in Oracle Cloud Infrastructure Monitoring service
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AlarmSpec defines the desired state of Alarm
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  body:
                    description: '(Updatable) The human-readable content of the delivered
                      alarm notification. Oracle recommends providing guidance to
                      operators for resolving the alarm condition. Consider adding
                      links to standard runbook practices. Avoid entering confidential
                      information.  Example: High CPU usage alert. Follow runbook
                      instructions for resolution.'
                    type: string
                  compartmentId:
                    description: (Updatable) The OCID of the compartment containing
                      the alarm.
                    type: string
                  compartmentIdRef:
                    description: Reference to a Compartment in identity to populate
                      compartmentId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  compartmentIdSelector:
                    description: Selector for a Compartment in identity to populate
                      compartmentId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Usage of predefined tag keys. These
                      predefined keys are scoped to namespaces. Example: {"Operations.CostCenter":
                      "42"}'
                    type: object
                  destinations:
                    description: '(Updatable) A list of destinations for alarm notifications.
                      Each destination is represented by the OCID of a related resource,
                      such as a topic. Supported destination services: Notifications
                      , Streaming.           Limit: One destination per supported
                      destination service.'
                    items:
                      type: string
                    type: array
                  displayName:
                    description: (Updatable) A user-friendly name for the alarm. It
                      does not have to be unique, and it's changeable. Avoid entering
                      confidential information.
                    type: string
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Simple key-value pair that is applied
                      without any predefined name, type or scope. Exists for cross-compatibility
                      only. Example: {"Department": "Finance"}'
                    type: object
                  isEnabled:
                    description: '(Updatable) Whether the alarm is enabled.  Example:
                      true'
                    type: boolean
                  isNotificationsPerMetricDimensionEnabled:
                    description: '(Updatable) When set to true, splits alarm notifications
                      per metric stream. When set to false, groups alarm notifications
                      across metric streams. Example: true'
                    type: boolean
                  messageFormat:
                    description: '(Updatable) The format to use for alarm notifications.
                      The formats are:'
                    type: string
                  metricCompartmentId:
                    description: (Updatable) The OCID of the compartment containing
                      the metric being evaluated by the alarm.
                    type: string
                  metricCompartmentIdInSubtree:
                    description: '(Updatable) When true, the alarm evaluates metrics
                      from all compartments and subcompartments. The parameter can
                      only be set to true when metricCompartmentId is the tenancy
                      OCID (the tenancy is the root compartment). A true value requires
                      the user to have tenancy-level permissions. If this requirement
                      is not met, then the call is rejected. When false, the alarm
                      evaluates metrics from only the compartment specified in metricCompartmentId.
                      Default is false.  Example: true'
                    type: boolean
                  metricCompartmentIdRef:
                    description: Reference to a Compartment in identity to populate
                      metricCompartmentId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metricCompartmentIdSelector:
                    description: Selector for a Compartment in identity to populate
                      metricCompartmentId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  namespace:
                    description: '(Updatable) The source service or application emitting
                      the metric that is evaluated by the alarm.  Example: oci_computeagent'
                    type: string
                  pendingDuration:
                    description: (Updatable) The period of time that the condition
                      defined in the alarm must persist before the alarm state changes
                      from "OK" to "FIRING". For example, a value of 5 minutes means
                      that the alarm must persist in breaching the condition for five
                      minutes before the alarm updates its state to "FIRING".
                    type: string
                  query:
                    description: '(Updatable) The Monitoring Query Language (MQL)
                      expression to evaluate for the alarm. The Alarms feature of
                      the Monitoring service interprets results for each returned
                      time series as Boolean values, where zero represents false and
                      a non-zero value represents true. A true value means that the
                      trigger rule condition has been met. The query must specify
                      a metric, statistic, interval, and trigger rule (threshold or
                      absence). Supported values for interval depend on the specified
                      time range. More interval values are supported for smaller time
                      ranges. You can optionally specify dimensions and grouping functions.
                      Supported grouping functions: grouping(), groupBy(). For information
                      about writing MQL expressions, see Editing the MQL Expression
                      for a Query. For details about MQL, see Monitoring Query Language
                      (MQL) Reference. For available dimensions, review the metric
                      definition for the supported service. See Supported Services.'
                    type: string
                  repeatNotificationDuration:
                    description: '(Updatable) The frequency for re-submitting alarm
                      notifications, if the alarm keeps firing without interruption.
                      Format defined by ISO 8601. For example, PT4H indicates four
                      hours. Minimum: PT1M. Maximum: P30D.'
                    type: string
                  resolution:
                    description: '(Updatable) The time between calculated aggregation
                      windows for the alarm. Supported value: 1m'
                    type: string
                  resourceGroup:
                    description: '(Updatable) Resource group that you want to match.
                      A null value returns only metric data that has no resource groups.
                      The alarm retrieves metric data associated with the specified
                      resource group only. Only one resource group can be applied
                      per metric. A valid resourceGroup value starts with an alphabetical
                      character and includes only alphanumeric characters, periods
                      (.), underscores (_), hyphens (-), and dollar signs ($). Avoid
                      entering confidential information.  Example: frontend-fleet'
                    type: string
                  severity:
                    description: '(Updatable) The perceived type of response required
                      when the alarm is in the "FIRING" state.  Example: CRITICAL'
                    type: string
                  suppression:
                    description: (Updatable) The configuration details for suppressing
                      an alarm.
                    items:
                      properties:
                        description:
                          description: (Updatable) Human-readable reason for suppressing
                            alarm notifications. It does not have to be unique, and
                            it's changeable. Avoid entering confidential information.
                          type: string
                        timeSuppressFrom:
                          description: '(Updatable) The start date and time for the
                            suppression to take place, inclusive. Format defined by
                            RFC3339.  Example: 2019-02-01T01:02:29.600Z'
                          type: string
                        timeSuppressUntil:
                          description: '(Updatable) The end date and time for the
                            suppression to take place, inclusive. Format defined by
                            RFC3339.  Example: 2019-02-01T02:02:29.600Z'
                          type: string
                      required:
                      - timeSuppressFrom
                      - timeSuppressUntil
                      type: object
                    type: array
                required:
                - destinations
                - displayName
                - isEnabled
                - namespace
                - query
                - severity
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AlarmStatus defines the observed state of Alarm.
            properties:
              atProvider:
                properties:
                  id:
                    description: The OCID of the alarm.
                    type: string
                  state:
                    description: 'The current lifecycle state of the alarm.  Example:
                      DELETED'
                    type: string
                  timeCreated:
                    description: 'The date and time the alarm was created. Format
                      defined by RFC3339.  Example: 2019-02-01T01:02:29.600Z'
                    type: string
                  timeUpdated:
                    description: 'The date and time the alarm was last updated. Format
                      defined by RFC3339.  Example: 2019-02-03T01:02:29.600Z'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
